1. flask to build
2. connect to cloud database

for drawing: https://excalidraw.com/
for image: https://unsplash.com/
for deploy: https://render.com/


{{data}} : for render data
{% command %}: for exe the python code
{% include 'home.html' %}: for the whole htlm template
 
send information as JSON -> rest API (JSON API or API endpoint)
-> my web server return some information not just as HTML 
-> return JSON -> data (so we can do whatever we want) 

API: just a URL, not return HTML, return some data structured data in form of JSON

Web service: database, dynamic data, API route, ...

Never push password on github public

Dynamic link:
@app.route("/job/<id>")
def show_job(id):
    pass

//To learn more about networking, server hosting, and web application deployment 

Networking Basics: 
Start with understanding IP addresses, ports, and the basics of how data travels over networks. 
Keywords: IP address, TCP/IP, ports, network protocols.

Server Hosting and Deployment: 
Look into different hosting platforms, deployment methods, and server configurations. 
Keywords: web hosting, cloud hosting, VPS (Virtual Private Server), server deployment.

Web Servers: 
Learn about web server software like Apache, Nginx, or server options provided by different programming languages/frameworks (e.g., Flask, Django, Node.js). 
Keywords: web server, Flask deployment, Nginx configuration.

Network Security: 
Understand security considerations when hosting applications, including firewalls, encryption,  and best practices for securing servers and networks. 
Keywords: network security, firewall, HTTPS, SSL/TLS.

Web Application Development: 
Dive into building web applications using frameworks like Flask, Django, or others. 
Keywords: web development, Flask tutorial, Django tutorial.
//